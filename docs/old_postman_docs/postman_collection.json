{
	"info": {
		"_postman_id": "b5a864f4-f389-4e1a-a138-dd3c7047430b",
		"name": "Apollo",
		"description": "## Allgemeine Informationen\n\n#### Github\n\n[Link](https://github.com/AlphaSoundZ/apollo)\n\n#### Token\n\nBei dem Autentifizierungtyp handelt es sich um einen Bearer Token, welcher im Authorization Header gesendet wird. Die Berechtigungen der Token lassen sich in der Datenbank unter der Tabelle `token` nachlesen und befinden sich im Payload unter `permissions`. Den Token erhält man über \"get token\". Dieser ist nicht Laufzeit beschränkt.\n\nWenn der Token nicht registriert ist, entspricht `response` den Code `88`. Wenn der Token registriert ist, aber nicht die Berechtigung auf die geforderten Rechte zugewiesen hat ist der `response` Code `99`.\n\n#### Input\n\nEs müssen immer alle notwendigen Inputs angegeben werden. Wenn ein oder mehrere Inputs fehlen ist der `response` Code `400`. Der `http_response_code` wird ebenfalls zurückgegeben.\n\n#### Response (noch nicht so umgesetzt)\n\nJede Response besteht aus einer `message` und `response`. Bei der `response` handelt es sich um einen Code, der aussagt, ob der Prozess der Anfrage erfolgreich war, oder wenn nicht, um welchen Fehlercode es sich handelt. In `message` wird der Fehler/Prozess kurz erläutert. Der Fehlercode steht auch immer im `http_response_code`.\n\nCodes:\n\n| **Code** | **Beschreibung** |\n| --- | --- |\n| 400 | ein oder mehrere Inputs fehlen, Input falsch |\n| 401 | Token ist nicht autorisiert |\n| 200 | Anfrage wurde erfolgreich bearbeitet |\n\nBei dem Request `Book` gibt es spezielle Response Codes, welche in dem Kapitel `Book` erläutert werden.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20621332"
	},
	"item": [
		{
			"name": "Search and select table",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"table\" : [{\"table\" : \"deces\"}],\r\n    \"filter\" : {\"page\" : 0, \"size\" : 5, \"orderby\" : \"device_id\", \"direction\" : \"ASC\"},\r\n    \"column\" : [\"devices.device_id\", \"devices.device_uid\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_path}}/search.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"search.php"
					]
				},
				"description": "## **Input**\n\n#### `table`\n\nJede Tabelle in `table` hat eine eigene `table` Eigenschaft. In der steht der Name der Tabelle (siehe Datenbank). Alle außer die erste Tabelle müssen einen `link` besitzen. Mit dem `link` wird festgelegt, welche Spalten der Tabellen miteinander verknüpft werden sollen. Der `link` besitzt zwei Werte: die Spalte der eigenen Tabelle und die Spalte der anderen Tabelle, welche verknüpft werden soll. Bei Link gibt man den Namen der Tabelle und den der Spalte an, was man mit einem `.` voneinander trennt.\n\n#### `filter`\n\nMit dem `filter` kann man u.a. die Anzahl und den Offset der Zeilen einstellen. `page` ist die Seite und `size` stellt die Länge da. Wenn `page` 0 ist und size `25` , dann erhält man die ersten 25 Einträge. Wenn man `page` auf 1 setzt, sieht man die darauffolgenden 25 Einträge. Mit `orderby` und `direction` kann man die Reihenfolge der Zeilen modifizieren. Bei `orderby` gibt man die Spalte an, die zur Sortierung verwendet wird. Hier gibt man den Namen der Spalte ohne Tabellennamen an. Mit `direction` legt man fest, ob die Reihenfolge absteigend oder aufsteigend sein soll. Dazu verwendet man `ASC` (aufsteigend) oder `DESC` (absteigend).\n\n#### `column`\n\nBei `column` müssen alle Spalten stehen, die sichbar sein sollen. Spalten für Sortierung (`orderby`) oder das Verlinken (`link`) müssen dort nicht aufgelistet sein, sofern sie nicht angezeigt werden sollen. Es ist wichtig, dass man immer Tabellen- und Spaltenbezeichnung angibt: `TABLE.COLUMN`. Diese werden mit einem `.` voneinander getrennt.\n\n#### `search`\n\nIn `search` wird das Suchwort in `value` mitgegeben. Außerdem legt man mit `column` in `search` die zu durchsuchenden Spalten fest. Die in `search -> column` angegebenen Spalten müssen in der Tabelle sichtbar sein - sie müssen auch in `column` angegeben sein.\n\nBei der Suche wird Groß- und Kleinschreibung ignoriert. Man kann außerdem eine Tabelle auch eine Suche durchzuführen auslesen, indem man die `search` Eigenschaft weglässt."
			},
			"response": [
				{
					"name": "Select one table",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"table\" : [{\"table\" : \"devices\"}],\r\n    \"filter\" : {\"page\" : 0, \"size\" : 5, \"orderby\" : \"device_id\", \"direction\" : \"ASC\"},\r\n    \"column\" : [\"devices.device_id\", \"devices.device_uid\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/search.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sun, 21 Aug 2022 13:43:30 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"message\":\"Selection success\",\"response\":2,\"table\":[{\"device_id\":1,\"0\":1,\"device_uid\":\"2e9ab22\",\"1\":\"2e9ab22\"},{\"device_id\":2,\"0\":2,\"device_uid\":\"8846fce\",\"1\":\"8846fce\"},{\"device_id\":3,\"0\":3,\"device_uid\":\"884d6cc\",\"1\":\"884d6cc\"},{\"device_id\":4,\"0\":4,\"device_uid\":\"8849ec9\",\"1\":\"8849ec9\"},{\"device_id\":5,\"0\":5,\"device_uid\":\"884d5cc\",\"1\":\"884d5cc\"}]}"
				},
				{
					"name": "Select multiple tables",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"table\" : [{\"table\" : \"devices\"}, {\"table\" : \"property_device_type\", \"link\" : [\"property_device_type.device_type_id\", \"devices.device_type\"]}],\r\n    \"filter\" : {\"page\" : 0, \"size\" : 5, \"orderby\" : \"device_id\", \"direction\" : \"ASC\"},\r\n    \"column\" : [\"devices.device_id\", \"devices.device_uid\", \"device_type_name\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/search.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sun, 21 Aug 2022 13:48:19 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"message\":\"Selection success\",\"response\":2,\"table\":[{\"device_id\":1,\"0\":1,\"device_uid\":\"2e9ab22\",\"1\":\"2e9ab22\",\"device_type_name\":\"UserCard\",\"2\":\"UserCard\"},{\"device_id\":2,\"0\":2,\"device_uid\":\"8846fce\",\"1\":\"8846fce\",\"device_type_name\":\"Surface Book\",\"2\":\"Surface Book\"},{\"device_id\":3,\"0\":3,\"device_uid\":\"884d6cc\",\"1\":\"884d6cc\",\"device_type_name\":\"Surface Book\",\"2\":\"Surface Book\"},{\"device_id\":4,\"0\":4,\"device_uid\":\"8849ec9\",\"1\":\"8849ec9\",\"device_type_name\":\"Surface Book\",\"2\":\"Surface Book\"},{\"device_id\":5,\"0\":5,\"device_uid\":\"884d5cc\",\"1\":\"884d5cc\",\"device_type_name\":\"Surface Book\",\"2\":\"Surface Book\"}]}"
				},
				{
					"name": "Search",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"table\" : [{\"table\" : \"user\"}],\r\n    \"filter\" : {\"page\" : 0, \"size\" : 5},\r\n    \"column\" : [\"user.user_id\", \"user.user_firstname\", \"user.user_lastname\", \"user.user_class\"],\r\n    \"search\" : {\"value\" : \"Holst\", \"column\" : [\"user_lastname\"], \"limit\" : 2}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/search.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sun, 21 Aug 2022 13:43:30 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"message\":\"Selection success\",\"response\":2,\"table\":[{\"device_id\":1,\"0\":1,\"device_uid\":\"2e9ab22\",\"1\":\"2e9ab22\"},{\"device_id\":2,\"0\":2,\"device_uid\":\"8846fce\",\"1\":\"8846fce\"},{\"device_id\":3,\"0\":3,\"device_uid\":\"884d6cc\",\"1\":\"884d6cc\"},{\"device_id\":4,\"0\":4,\"device_uid\":\"8849ec9\",\"1\":\"8849ec9\"},{\"device_id\":5,\"0\":5,\"device_uid\":\"884d5cc\",\"1\":\"884d5cc\"}]}"
				}
			]
		},
		{
			"name": "Add a device",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"rfid_code\": \"6594\",\r\n    \"type\": \"3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_path}}/add_device.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"add_device.php"
					]
				},
				"description": "## Input\n\nIn `rfid_code` steht die UID des Geräts bzw. der Usercard. In `type` wird der Gerätetyp festgelegt. Alle verfügbaren Gerätetypen sind in der Tabelle *property_device_type* hinterlegt.\n\n## Output\n\n``` json\n{\"response\":\"1\",\"message\":\"success\"}\n\n```"
			},
			"response": [
				{
					"name": "Add a device",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rfid_code\": \"654\",\r\n    \"type\": \"3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/add_device.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"add_device.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sat, 20 Aug 2022 18:59:24 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"response\":\"1\",\"message\":\"success\"}"
				}
			]
		},
		{
			"name": "Add a user",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"Test4905\",\r\n    \"lastname\": \"Test4805\",\r\n    \"class\": \"1\",\r\n    \"usercard_uid\": \"123123123\",\r\n    \"new_usercard\": \"auto\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_path}}/add_user.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"add_user.php"
					]
				},
				"description": "## Input\n\n`firstname` - Vorname des Users\n\n`lastname` - Nachname des Users\n\n`class` - Klasse des Users. Wird als Id angegeben. Die Id ist in der Tabelle *property_class* hinterlegt.\n\n`newusercard` - Hier legt man fest, ob eine neue Usercard erstellt werden soll, oder die Usercard schon vorhanden ist. Dies legt man mit `true` oder `false` fest. Wenn man `newusercard` auf `\"auto\"` setzt, wird automatisch ausgewählt, ob eine Usercard erstellt werden muss."
			},
			"response": [
				{
					"name": "Add a user and create a usercard",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Test4905\",\r\n    \"lastname\": \"Test4805\",\r\n    \"class\": \"1\",\r\n    \"usercard_uid\": \"123123123\",\r\n    \"new_usercard\": \"auto\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/add_user.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"add_user.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sat, 20 Aug 2022 18:42:11 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"response\":3,\"message\":\"Usercard wird erstellt und zugewiesen\"}"
				}
			]
		},
		{
			"name": "Update",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"table\": \"user\",\r\n    \"id\": 1,\r\n    \"update\" : {\"user_firstname\" : \"Test Vorname\", \"user_lastname\" : \"Test Nachname\"}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_path}}/update.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"update.php"
					]
				},
				"description": "## Input\n\nIn `rfid_code` steht die UID des Geräts bzw. der Usercard. In `type` wird der Gerätetyp festgelegt. Alle verfügbaren Gerätetypen sind in der Tabelle *property_device_type* hinterlegt."
			},
			"response": [
				{
					"name": "Update user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"table\": \"user\",\r\n    \"id\": 1,\r\n    \"update\" : {\"user_firstname\" : \"Test Vorname\", \"user_lastname\" : \"Test Nachname\"}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/update.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"update.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sun, 21 Aug 2022 19:29:52 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"message\":\"Update success\",\"response\":1}"
				}
			]
		},
		{
			"name": "Delete",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"table\": \"event\",\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_path}}/delete.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"delete.php"
					]
				},
				"description": "## Input\n\nIn `rfid_code` steht die UID des Geräts bzw. der Usercard. In `type` wird der Gerätetyp festgelegt. Alle verfügbaren Gerätetypen sind in der Tabelle *property_device_type* hinterlegt."
			},
			"response": [
				{
					"name": "Delete",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"table\": \"event\",\r\n    \"id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/delete.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"delete.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sun, 21 Aug 2022 19:42:06 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"message\":\"Delete success\",\"response\":1}"
				}
			]
		},
		{
			"name": "Get token",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"test_usr\",\r\n    \"password\": \"test_pwd\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_path}}/get_token.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"get_token.php"
					]
				},
				"description": "## **Input**\n\nBei dem Feld `username` steht der Benutzername. Bei `password` steht das Passwort."
			},
			"response": [
				{
					"name": "Get token",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_usr\",\r\n    \"password\": \"test_pwd\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{[base_path}}/get_token.php",
							"host": [
								"{[base_path}}"
							],
							"path": [
								"get_token.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sat, 20 Aug 2022 18:25:15 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"response\":0,\"message\":\"success\",\"jwt\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwZXJtaXNzaW9ucyI6eyIxIjoiYWRkX2RldmljZSIsIjIiOiJhZGRfdXNlciIsIjMiOiJzZWFyY2giLCI0IjoibG9naW4iLCI1IjoicmVzZXQiLCI2IjoicHJlYm9vayJ9fQ.zDtJyKnBv4PKvKqULG61fI8c_J_LIxm2jIpRob-g8SM\"}"
				}
			]
		},
		{
			"name": "Check token",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_path}}/check_token.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"check_token.php"
					]
				},
				"description": "## Input\n\nDer einzige Input ist der Token, welcher in die Authorization kommt. Der Body bleibt leer.\n\n## Output\n\nBei `permissions` sieht man die Rechte, des gegebenen Tokens. Dieser Array besteht aus einem Schlüssel, welcher die `permission_id` darstellt, und einem Wert, der den `permission_text` zu der `permission_id` angibt."
			},
			"response": [
				{
					"name": "Check token",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:8080/check_token.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"check_token.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sat, 20 Aug 2022 19:12:16 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"response\":0,\"message\":\"Authorized\",\"permissions\":[\"add_device\",\"add_user\",\"search\",\"login\",\"reset\"]}"
				}
			]
		},
		{
			"name": "Reset",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"table\": \"event\",\r\n    \"reset_id\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_path}}/reset.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"reset.php"
					]
				},
				"description": "## Input\n\n`table` - Tabellenname, der zurückgesetzt werden soll\n\n`reset_id` - Soll auch die id der Zeilen zurückgesetzt werden?\n\n`rows_deleted` - Anzahl der Zeilen, die gelöscht wurden\n\n### Response Codes\n\n| **Code** | **Bedeutung** |\n| --- | --- |\n| 3 | Device oder Usercard konnte nicht in der Datenbank gefunden werden. |\n| 4 | Device kann nciht zurückgegeben werden, weil es nicht ausgeliehen ist. |\n| 5 | Device kann nicht ausgeliehen werden, weil man bereits etwas ausleiht. Dies ist der Fall, wenn der User kein Multiuser (i.d.R. Lehrer) ist. Diese sind in der Config festgelegt. |\n| 6 | Device wird bereits ausgeliehen. |\n| 7 | Es handelt sich nicht um ein Device. I.d.R. handelt es sich um eine zweimal hintereinander eingescannte Usercard. |"
			},
			"response": [
				{
					"name": "Reset event table",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"table\": \"event\",\r\n    \"reset_id\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/reset.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reset.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sun, 21 Aug 2022 13:23:35 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"response\":\"0\",\"message\":\"success\",\"rows_deleted\":1}"
				}
			]
		},
		{
			"name": "Book",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"uid_1\" : \"884d6cc\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_path}}/booking.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"booking.php"
					]
				},
				"description": "## Input\n\n#### Ausleihen\n\n`uid_1` - UID der Usercard\n\n`uid_2` - UID des Geräts\n\n#### Zurückgeben\n\n`uid_1` - UID des Geräts\n\n#### User Info\n\n`uid_1` - UID der Usercard"
			},
			"response": [
				{
					"name": "Return",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"uid_1\" : \"884d6cc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/booking.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"booking.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sat, 20 Aug 2022 18:13:59 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"message\":\"Ger\\u00e4t zur\\u00fcckgegeben\",\"response\":200}"
				},
				{
					"name": "Userinfo",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"uid_1\" : \"2e9ab22\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/booking.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"booking.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sat, 20 Aug 2022 18:16:18 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"message\":\"Info zu User erfolgt\",\"user\":{\"firstname\":\"Test Vorname\",\"lastname\":\"TestNachname\",\"user_id\":1,\"class\":\"Lehrer\",\"status\":[]},\"response\":200}"
				},
				{
					"name": "Lend",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"uid_1\" : \"2e9ab22\",\r\n    \"uid_2\" : \"884d6cc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/booking.php",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"booking.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Host",
							"value": "localhost:8080"
						},
						{
							"key": "Date",
							"value": "Sat, 20 Aug 2022 18:13:24 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.4"
						},
						{
							"key": "Content-type",
							"value": "text/html; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\"message\":\"Ger\\u00e4t ausgeliehen\",\"response\":200}"
				}
			]
		},
		{
			"name": "Prebook",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user_id\" : 1,\r\n    \"amount\" : 10,\r\n    \"begin\" : \"2022-06-08 11:10:00\",\r\n    \"end\" : \"2022-06-08 11:50:00\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_path}}/prebook.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"prebook.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add CSV",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"table\" : \"property_class\",\r\n    \"columns\" : [\"class_name\"],\r\n    \"string\" : \"'10a', '10b', '10c'\",\r\n    \"seperator\" : \",\",\r\n    \"enclosure\" : \"'\",\r\n    \"escape\" : \".\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_path}}/in_work/csv_add.php",
					"host": [
						"{{base_path}}"
					],
					"path": [
						"in_work",
						"csv_add.php"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "bearer_token",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwZXJtaXNzaW9ucyI6WzEsMiwzLDQsNSw2LDcsOCw5LDEwXSwic3ViIjoxLCJpYXQiOiIwLjEzMzM3NTAwIDE2NjE2MzQzNDAifQ.K485Swd0ez045Vb0bP58BfV2mpTBVGLb4hmVm3fTvcY",
			"type": "string"
		},
		{
			"key": "base_path",
			"value": "10.4.8.100/api/v2/",
			"type": "string"
		}
	]
}